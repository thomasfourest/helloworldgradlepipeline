#!groovy

pipeline {
//  agent any
  agent { node { label 'SandboxNode' }}

  tools {
//    maven 'Maven 3.6.0'
    jdk 'jdk1.8.0_u144'
    gradle 'gradle 5.3.1'	
  }

  options {
    disableConcurrentBuilds()
    buildDiscarder(logRotator( daysToKeepStr: '', numToKeepStr: '1'))
  }

  stages{

    stage('clean') {
      steps{
        deleteDir()
      }
    }

    stage("checkout"){
      steps{
	    dir("masterbranch"){
          git branch: 'master', url: "https://github.com/thomasfourest/helloworldgradlepipeline.git"
		}
      }		
    }

    stage("Build and deploy"){
	  steps{
	    sh 'ls -al'	
	    echo "JAVA_HOME = ${JAVA_HOME}"
        sh 'ls -al'
	    sh 'gradle --version'
        dir("masterbranch"){		
          sh 'gradle release publish -Prelease.useAutomaticVersion=true --info'	    
		}
      }
    }
  }

  post {
    always {
      junit allowEmptyResults: true, testResults: '**/target/surefire-reports/TEST*.xml'
      echo 'clean up our workspace'
      script {
        def wrkspcDir = pwd()
        dir("${wrkspcDir}@script") {
          println "delete ${wrkspcDir}@script"
          deleteDir()
        }
        dir("${wrkspcDir}@tmp") {
          println "delete ${wrkspcDir}@tmp"
          deleteDir()
        }
      }
      cleanWs cleanWhenFailure: true, cleanWhenNotBuilt: true, cleanWhenUnstable: true, notFailBuild: true
    }
  }

}
